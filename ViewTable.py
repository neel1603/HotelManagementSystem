import sqlite3
from tkinter import *
class ViewTable:
    def viewEmployee(self,mode):
        conn = sqlite3.connect('Hotel_Management.db')
        c = conn.cursor()
        def exe(w,eid):
            c.execute("SELECT * FROM employee WHERE EID=(?);",(eid.get(),))
            Label(w,text=str(c.fetchall())).pack()
        if(mode==3):
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            Label(w,text='Enter EID:').pack()
            eid = Entry(w)
            eid.pack()
            Button(w,text='Ok',command=lambda:exe(w,eid)).pack()
            w.mainloop()
            conn.close()
            return
        def sp(ch):
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            ch.destroy()
            Label(w,text='Enter EID:').pack()
            eid = Entry(w)
            eid.pack()
            Button(w,text='Ok',command=lambda:exe(w,eid)).pack()
            w.mainloop()
        def all(ch):
            ch.destroy()
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            c.execute("SELECT * FROM employee;")
            Label(w,text=str(c.fetchall())).pack()
            w.mainloop()
        ch = Tk()
        ch.iconbitmap(r'favicon.ico')
        Button(ch,text='Specific Employee',command=lambda:sp(ch)).pack()
        Button(ch,text='All Employee',command=lambda:all(ch)).pack()
        ch.mainloop()
        conn.close()
        

    def viewHotel(self):
        conn = sqlite3.connect('Hotel_Management.db')
        c = conn.cursor()
        def exe(w,hotelid):
            c.execute("SELECT * FROM hotel WHERE HOTELID=(?);",(hotelid.get(),))
            Label(w,text=str(c.fetchall())).pack()
        def sp(ch):
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            ch.destroy()
            Label(w,text='Enter HOTELID:').pack()
            hotelid = Entry(w)
            hotelid.pack()
            Button(w,text='Ok',command=lambda:exe(w,hotelid)).pack()
            w.mainloop()
        def all(ch):
            ch.destroy()
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            c.execute("SELECT * FROM hotel;")
            Label(w,text=str(c.fetchall())).pack()
            w.mainloop()
        ch = Tk()
        ch.iconbitmap(r'favicon.ico')
        Button(ch,text='Specific Hotel',command=lambda:sp(ch)).pack()
        Button(ch,text='All Hotels',command=lambda:all(ch)).pack()
        ch.mainloop()
        conn.close()




    def viewCustomer(self,mode):
        conn = sqlite3.connect('Hotel_Management.db')
        c = conn.cursor()
        def exe(w,cid):
            c.execute("SELECT * FROM customer WHERE CID=(?);",(cid.get(),))
            Label(w,text=str(c.fetchall())).pack()
        if(mode==4):
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            Label(w,text='Enter CID:').pack()
            cid = Entry(w)
            cid.pack()
            Button(w,text='Ok',command=lambda:exe(w,cid)).pack()
            w.mainloop()
            conn.close()
            return
        def sp(ch):
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            ch.destroy()
            Label(w,text='Enter CID:').pack()
            cid = Entry(w)
            cid.pack()
            Button(w,text='Ok',command=lambda:exe(w,cid)).pack()
            w.mainloop()
        def all(ch):
            ch.destroy()
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            c.execute("SELECT * FROM customer;")
            Label(w,text=str(c.fetchall())).pack()
            w.mainloop()
        ch = Tk()
        ch.iconbitmap(r'favicon.ico')
        Button(ch,text='Specific Customer',command=lambda:sp(ch)).pack()
        Button(ch,text='All Customers',command=lambda:all(ch)).pack()
        ch.mainloop()
        conn.close()
        
    
    def viewServices(self):
        conn = sqlite3.connect('Hotel_Management.db')
        c = conn.cursor()
        def exe(w,sno):
            c.execute("SELECT * FROM services WHERE SNO=(?)",(sno.get(),))
            Label(w,text=str(c.fetchall())).pack()
        def sp(ch):
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            ch.destroy()
            Label(w,text='Enter SNO:').pack()
            sno = Entry(w)
            sno.pack()
            Button(w,text='Ok',command=lambda:exe(w,sno)).pack()
            w.mainloop()
        def all(ch):
            ch.destroy()
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            c.execute("SELECT * FROM services;")
            Label(w,text=str(c.fetchall())).pack()
            w.mainloop()
        ch = Tk()
        ch.iconbitmap(r'favicon.ico')
        Button(ch,text='Specific Service',command=lambda:sp(ch)).pack()
        Button(ch,text='All Services',command=lambda:all(ch)).pack()
        ch.mainloop()
        conn.close()

    def viewOwner(self):
        conn = sqlite3.connect('Hotel_Management.db')
        c = conn.cursor()
        def exe(w,oid):
            c.execute("SELECT * FROM owner WHERE OID=(?);",(oid.get(),))
            Label(w,text=str(c.fetchall())).pack()
        def sp(ch):
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            ch.destroy()
            Label(w,text='Enter OID:').pack()
            oid = Entry(w)
            oid.pack()
            Button(w,text='Ok',command=lambda:exe(w,oid)).pack()
            w.mainloop()
        def all(ch):
            ch.destroy()
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            c.execute("SELECT * FROM owner;")
            Label(w,text=str(c.fetchall())).pack()
            w.mainloop()
        ch = Tk()
        ch.iconbitmap(r'favicon.ico')
        Button(ch,text='Specific Owner',command=lambda:sp(ch)).pack()
        Button(ch,text='All Owners',command=lambda:all(ch)).pack()
        ch.mainloop()
        conn.close()


    def viewRooms(self):
        conn = sqlite3.connect('Hotel_Management.db')
        c = conn.cursor()
        def exe(w,rid,hotelid):
            c.execute("SELECT * FROM rooms WHERE RID=(?) AND HOTELID=(?);",(rid.get(),hotelid.get()))
            Label(w,text=str(c.fetchall())).pack()
        def sp(ch):
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            ch.destroy()
            Label(w,text='Enter RID:').pack()
            rid = Entry(w)
            rid.pack()
            Label(w,text='Enter HOTELID:').pack()
            hotelid = Entry(w)
            hotelid.pack()
            Button(w,text='Ok',command=lambda:exe(w,rid,hotelid)).pack()
            w.mainloop()
        def all(ch):
            ch.destroy()
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            c.execute("SELECT * FROM rooms;")
            Label(w,text=str(c.fetchall())).pack()
            w.mainloop()
        ch = Tk()
        ch.iconbitmap(r'favicon.ico')
        Button(ch,text='Specific Room',command=lambda:sp(ch)).pack()
        Button(ch,text='All Rooms',command=lambda:all(ch)).pack()
        ch.mainloop()
        conn.close()
        
    def viewProvides(self):
        conn = sqlite3.connect('Hotel_Management.db')
        c = conn.cursor()
        def exe(w,sno,hotelid):
            c.execute("SELECT * FROM provides WHERE SNO=(?) AND HOTELID=(?);",(sno.get(),hotelid.get()))
            Label(w,text=str(c.fetchall())).pack()
        def sp(ch):
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            ch.destroy()
            Label(w,text='Enter SNO:').pack()
            sno = Entry(w)
            sno.pack()
            Label(w,text='Enter HOTELID:').pack()
            hotelid = Entry(w)
            hotelid.pack()
            Button(w,text='Ok',command=lambda:exe(w,sno,hotelid)).pack()
            w.mainloop()
        def all(ch):
            ch.destroy()
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            c.execute("SELECT * FROM provides;")
            Label(w,text=str(c.fetchall())).pack()
            w.mainloop()
        ch = Tk()
        ch.iconbitmap(r'favicon.ico')
        Button(ch,text='Specific provision',command=lambda:sp(ch)).pack()
        Button(ch,text='All provisions',command=lambda:all(ch)).pack()
        ch.mainloop()
        conn.close()
    
    def viewBooking(self,mode):
        conn = sqlite3.connect('Hotel_Management.db')
        c = conn.cursor()
        def exe(w,cid,hotelid):
            c.execute("SELECT * FROM booking WHERE CID=(?) AND HOTELID=(?);",(cid.get(),hotelid.get()))
            Label(w,text=str(c.fetchall())).pack()
        if(mode==4):
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            Label(w,text='Enter CID:').pack()
            cid = Entry(w)
            cid.pack()
            Label(w,text='Enter HOTELID:').pack()
            hotelid=Entry(w)
            hotelid.pack()
            Button(w,text='Ok',command=lambda:exe(w,cid,hotelid)).pack()
            w.mainloop()
            conn.close()
            return
        def sp(ch):
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            ch.destroy()
            Label(w,text='Enter CID:').pack()
            cid = Entry(w)
            cid.pack()
            Label(w,text='Enter HOTELID:').pack()
            hotelid=Entry(w)
            hotelid.pack()
            Button(w,text='Ok',command=lambda:exe(w,cid,hotelid)).pack()
            w.mainloop()
        def all(ch):
            ch.destroy()
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            c.execute("SELECT * FROM booking;")
            Label(w,text=str(c.fetchall())).pack()
            w.mainloop()
        ch = Tk()
        ch.iconbitmap(r'favicon.ico')
        Button(ch,text='Specific booking',command=lambda:sp(ch)).pack()
        Button(ch,text='All bookings',command=lambda:all(ch)).pack()
        ch.mainloop()
        conn.close()
        
    def viewBill(self,mode):
        conn = sqlite3.connect('Hotel_Management.db')
        c = conn.cursor()
        def exe(w,cid,billid):
            c.execute("SELECT * FROM bill WHERE CID=(?) AND BILLID=(?);",(cid.get(),billid.get()))
            Label(w,text=str(c.fetchall())).pack()
        if(mode==4):
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            Label(w,text='Enter CID:').pack()
            cid = Entry(w)
            cid.pack()
            Label(w,text='Enter BILLID:').pack()
            billid=Entry(w)
            billid.pack()
            Button(w,text='Ok',command=lambda:exe(w,cid,billid)).pack()
            w.mainloop()
            conn.close()
            return
        def sp(ch):
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            ch.destroy()
            Label(w,text='Enter CID:').pack()
            cid = Entry(w)
            cid.pack()
            Label(w,text='Enter BILLID:').pack()
            billid=Entry(w)
            billid.pack()
            Button(w,text='Ok',command=lambda:exe(w,cid,billid)).pack()
            w.mainloop()
        def all(ch):
            ch.destroy()
            w = Tk()
            w.iconbitmap(r'favicon.ico')
            c.execute("SELECT * FROM bill;")
            Label(w,text=str(c.fetchall())).pack()
            w.mainloop()
        ch = Tk()
        ch.iconbitmap(r'favicon.ico')
        Button(ch,text='Specific bill',command=lambda:sp(ch)).pack()
        Button(ch,text='All bills',command=lambda:all(ch)).pack()
        ch.mainloop()
        conn.close()